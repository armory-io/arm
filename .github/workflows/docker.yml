name: Scan & Publish Containers
on:
  push:

jobs:
  main:
    env:
      BASE_PROJECT: arm-cli
      GRGIT_USER: GitHub
      GRGIT_PASS: ${{ secrets.GITHUB_TOKEN }}
      JFROG_ARGS: --url https://armory.jfrog.io/armory/ --user ${{secrets.ARTIFACTORY_USER}} --password ${{secrets.ARTIFACTORY_PASSWORD}}
      GRADLE_ARGS: -Partifactory_user=${{secrets.ARTIFACTORY_USER}} -Partifactory_password=${{secrets.ARTIFACTORY_PASSWORD}} --info -x dockerClean -x dockerPrepare
    runs-on: ubuntu-latest
    steps:
      - name: Cache Build Dependencies
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: gradle-${{ hashFiles('**/*.gradle*') }}
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Fetch full history
        run: git fetch --prune --tags --unshallow

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: setup JFROG Cli
        uses: jfrog/setup-jfrog-cli@v1
        with:
          version: 1.32.4

      - name: Login to Artifactory
        run: |
          docker login -u ${{ secrets.ARTIFACTORY_USER }} -p ${{ secrets.ARTIFACTORY_PASSWORD }} armory-docker-local.jfrog.io

      - name: create softlink for docker plugin
        run: |
          rm -fr build/docker
          mkdir -p build
          ln -sf $(pwd) $(pwd)/build/docker

      - name: Publish devSnapshot

        if: github.ref != 'refs/heads/master' && !startsWith(github.ref, 'refs/heads/release-')
        run: |
          ./gradlew devSnapshot docker dockerPush $GRADLE_ARGS
          echo "::set-env name=BUILD_NUMBER::$(./gradlew $GRADLE_ARGS printVersion|grep VERSION|awk -F: '{print $2}')"

      - name: Publish Candidate
        if: github.ref == 'refs/heads/master'
        run: |
          ./gradlew candidate docker dockerPush $GRADLE_ARGS
          echo "::set-env name=BUILD_NUMBER::$(./gradlew -Prelease.useLastTag=true $GRADLE_ARGS printVersion|grep VERSION|awk -F: '{print $2}')"

      - name: Publish Release
        if: startsWith(github.ref, 'refs/heads/release-')
        run: |
          ./gradlew final docker dockerPush $GRADLE_ARGS
          echo "::set-env name=BUILD_NUMBER::$(./gradlew -Prelease.useLastTag=true $GRADLE_ARGS  printVersion|grep VERSION|awk -F: '{print $2}')"

      - name: Run Xray Scan
        if: startsWith(github.ref, 'refs/heads/release-') || github.ref == 'refs/heads/master'
        run: |
          jfrog rt docker-push armory-docker-local.jfrog.io/armory/$BASE_PROJECT:$BUILD_NUMBER docker-local --build-name=$BASE_PROJECT-armory --build-number=$BUILD_NUMBER $JFROG_ARGS
          jfrog rt build-publish $BASE_PROJECT-armory $BUILD_NUMBER $JFROG_ARGS
          jfrog rt build-scan $BASE_PROJECT-armory $BUILD_NUMBER $JFROG_ARGS
          sleep 30
          jfrog rt build-scan $BASE_PROJECT-armory $BUILD_NUMBER $JFROG_ARGS

      - name: Scan Using Aquasec
        if: startsWith(github.ref, 'refs/heads/release-') || github.ref == 'refs/heads/master'
        uses: docker://docker.io/aquasec/trivy:0.2.1
        with:
          args: --cache-dir /var/lib/trivy --exit-code 1 --no-progress armory-docker-local.jfrog.io/armory/${{env.BASE_PROJECT}}:${{env.BUILD_NUMBER}}

      - name: Login to Docker Hub
        if: startsWith(github.ref, 'refs/heads/release-')
        run: docker login -u ${{ secrets.DOCKER_HUB_USER }} -p '${{ secrets.DOCKER_HUB_PASS }}'

      - name: Publish Release to Docker Hub
        if: startsWith(github.ref, 'refs/heads/release-')
        run: |
          RELEASE=$(./gradlew -Prelease.useLastTag=true $GRADLE_ARGS  printVersion|grep VERSION|awk -F: '{print $2}')
          echo "Tagging armory-docker-all.jfrog.io/armory/$BASE_PROJECT$RELEASE to armory/$BASE_PROJECT:$RELEASE"
          docker image tag armory-docker-local.jfrog.io/armory/$BASE_PROJECT:$RELEASE armory/$BASE_PROJECT:$RELEASE
          echo "Pushing image..."
          docker push armory/$BASE_PROJECT:$RELEASE